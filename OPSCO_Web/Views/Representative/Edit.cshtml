@model OPSCO_Web.Models.OSC_Representative

@{
    ViewBag.Title = "Edit";
}
<script src="~/Scripts/jquery-3.2.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/Site.js"></script>
<link rel="stylesheet" href="~/Content/themes/base/jquery-ui.css" />
<h3>Representative</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>Edit</h4>
    <hr />
    <div class="row">
        <div class="col-md-12">
            <a href="@Url.Action("Index", "Representative", null)" class="btn btn-default btn-sm">
                <i class="fa fa-chevron-left"></i> Back to List
            </a>
        </div>
    </div>
    <br />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RepId)
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Team.TeamName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownList("TeamId", (IEnumerable<SelectListItem>)ViewBag.Teams, "--Select Team--", htmlAttributes: new { @class = "form-control input-sm input-required unfilled" })
            @Html.ValidationMessageFor(model => model.TeamId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CoreRole.CoreRole, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownList("CoreRoleId", (IEnumerable<SelectListItem>)ViewBag.CoreRoles, "--Select Role--", htmlAttributes: new { @class = "form-control input-sm input-required unfilled" })
            @Html.ValidationMessageFor(model => model.CoreRoleId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PRDUserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.PRDUserId, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled" } })
            @Html.ValidationMessageFor(model => model.PRDUserId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AIQUserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.AIQUserId, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled" } })
            @Html.ValidationMessageFor(model => model.AIQUserId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BIUserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.BIUserId, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled" } })
            @Html.ValidationMessageFor(model => model.BIUserId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control input-sm", id="txt_startdt" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control input-sm", id="txt_enddt" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Location.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownList("LocationId", (IEnumerable<SelectListItem>)ViewBag.Locations, "--Select Location--", htmlAttributes: new { @class = "form-control input-sm input-required unfilled" })
            @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.OnShoreRep, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            <div class="checkbox">
                @Html.EditorFor(model => model.OnShoreRep)
                @Html.ValidationMessageFor(model => model.OnShoreRep, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PhoneRep, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            <div class="checkbox">
                @Html.EditorFor(model => model.PhoneRep)
                @Html.ValidationMessageFor(model => model.PhoneRep, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.WorkHours, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.WorkHours, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled" } })
            @Html.ValidationMessageFor(model => model.WorkHours, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
    <div class="navbar navbar-default navbar-fixed-bottom table-nav">
        <div class="container-fluid">
            <div class="navbar-right navbar-form">
                <button type="submit" disabled class="btn btn-primary btn-sm pull-right" id="submit">
                    <i class="fa fa-save"></i> Save
                </button>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(function () {
        validate($('#submit'));
        $('#txt_startdt').datepicker({ format: 'mm/dd/yy', showAnim: 'drop' });
        $('#txt_enddt').datepicker({ format: 'mm/dd/yy', showAnim: 'drop' });
    });
</script>