@using PagedList
@using PagedList.Mvc
@model IPagedList<OPSCO_Web.Models.OSC_ActivityTracker>
@{
    ViewBag.Title = "Activity Tracker";
}
<h3>Activity Tracker</h3>
<div class="row">
    <div class="col-md-6">
        <div class="btn-group">
            @if (ViewBag.CanAdd)
            {
                <a class="btn btn-primary btn-sm" href="@Url.Action("Create", "ActivityTracker", null)">
                    <i class="fa fa-plus"></i> New Record
                </a>
            }
            else
            {
                <a class="btn btn-primary btn-sm disabled" href="@Url.Action("Create", "ActivityTracker", null)">
                    <i class="fa fa-plus"></i> New Record
                </a>
            }
            <a href="#" class="btn btn-primary btn-sm" onclick="$('#btn_submit').click()">
                <i class="fa fa-file-excel-o"></i> Export
            </a>               
            @using (Html.BeginForm("Export", "ActivityTracker", FormMethod.Post))
            {
                <input type="submit" hidden id="btn_submit" />
            }
        </div>
    </div>
    <div class="col-md-6">
        <a href="#" id="btn_filter" class="btn btn-default btn-sm pull-right" title="Filter On">
            <i class="fa fa-eye"></i>
        </a>
    </div>
</div>
<br />
<table id="table" class="table coverbg table-striped table-hover table-condensed input-sm">
    <thead>
        <tr id="row_header">
            <th>
                @Html.DisplayNameFor(model => model.First().Activity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Team.TeamName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Representative.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DateFrom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DateTo)
            </th>
            @if (Session["role"].ToString() == "Admin")
            {
                <th>@Html.DisplayNameFor(model => model.First().IsActive)</th>
            }
            <th>&nbsp;</th>
        </tr>
        <tr id="row_filter" class="hidden">
            <td>
                <input type="text" class="form-control input-sm" placeholder="Activity" id="txt_search_1"/>
            </td>
            <td>
                <input type="text" class="form-control input-sm" placeholder="Team" id="txt_search_2"/>
            </td>
            <td>
                <input type="text" class="form-control input-sm" placeholder="Representative" id="txt_search_3"/>
            </td>
            <td>
                <input type="text" class="form-control input-sm" placeholder="Date From" id="txt_search_4"/>
            </td>
            <td>
                <input type="text" class="form-control input-sm" placeholder="Date To" id="txt_search_5"/>
            </td>
            @if (Session["role"].ToString() == "Admin")
            {
                <td>
                    &nbsp;
                </td>
            }
            <td>&nbsp;</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                <a href="@Url.Action("Details", new { id = item.ActivityId })">
                    @Html.DisplayFor(modelItem => item.Activity)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Team.TeamName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Representative.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateFrom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTo)
            </td>
            @if (Session["role"].ToString() == "Admin")
            {
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
            }
            <td>
                <div class="btn-group">
                    @if (ViewBag.CanEdit)
                    {
                        <a class="btn btn-default btn-xs" href="@Url.Action("Edit", new { id = item.ActivityId })" title="Edit Record">
                            <i class="fa fa-edit"></i>
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-default btn-xs disabled" href="@Url.Action("Edit", new { id = item.ActivityId })" title="Edit Record">
                            <i class="fa fa-edit"></i>
                        </a>
                    }
                    @if (ViewBag.CanDelete)
                    {
                        <a class="btn btn-danger btn-xs" href="@Url.Action("Delete", new { id = item.ActivityId })" title="Delete Record">
                            <i class="fa fa-trash"></i>
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-danger btn-xs disabled" href="@Url.Action("Delete", new { id = item.ActivityId })" title="Delete Record">
                            <i class="fa fa-trash"></i>
                        </a>
                    }
                </div>
            </td>
        </tr>
        }
    </tbody>
</table>
<br /><br /><br /><br />
<div class="navbar navbar-default navbar-fixed-bottom table-nav">
    <br />
    <div class="container-fluid">
        <div class="col-md-12">
            @Html.DropDownList("PageSize",
                     new SelectList(new Dictionary<string, int> { { "10", 10 }, { "25", 25 }, { "50", 50 } },
                     "Key", "Value", Model.PageSize),
                     new { @class = "form-control input-sm page-size", id = "pagesizelist" })
        </div>
        <div class="col-md-12">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                     new PagedListRenderOptions()
                     {
                         DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                         DisplayLinkToLastPage = PagedListDisplayMode.Always,
                         DisplayLinkToNextPage = PagedListDisplayMode.Always,
                         DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                         DisplayPageCountAndCurrentLocation = true,
                         MaximumPageNumbersToDisplay = 5,
                         DisplayItemSliceAndTotal = true
                     })
        </div>
    </div>
</div>
<script type="text/javascript" src="~/Scripts/jquery-3.2.1.js"></script>
<script type="text/javascript" src="~/Scripts/Site.js"></script>
<script>
    $(function () {
        $("#txt_search_1").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/ActivityTracker/ActivityAutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                //$("#hfCustomer").val(i.item.val);
            },
            minLength: 1
        });
        $("#txt_search_2").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/ActivityTracker/TeamAutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                //$("#hfCustomer").val(i.item.val);
            },
            minLength: 1
        });
        $("#txt_search_3").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/ActivityTracker/RepresentativeAutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                //$("#hfCustomer").val(i.item.val);
            },
            minLength: 1
        });
        $('#txt_search_4').datepicker({ format: 'mm/dd/yy', showAnim: 'drop' });
        $('#txt_search_5').datepicker({ format: 'mm/dd/yy', showAnim: 'drop' });
        $('#pagesizelist').change(function () {
            var url = '@Url.Action("Index")?pageSize=' + $(this).val() + '&searchString=' + $('#search').val();
            window.location.href = url;
        });
        //$('#search').keypress(function (e) {
        //    if (e.which == 13) {
        //        var url = '@Url.Action("Index")?searchString=' + $(this).val() + '&pageSize=' + $('#pagesizelist').val();
        //        window.location.href = url;
        //    }
        //});
        //$('#cmd_search').click(function () {
        //    var url = '@Url.Action("Index")?searchString=' + $('#search').val() + '&pageSize=' + $('#pagesizelist').val();
        //    window.location.href = url;
        //});
        var clicked = false;
        $('#btn_filter').click(function () {
            clicked = !clicked;
            if (clicked == true) {
                $('#row_header').addClass('hidden');
                $('#row_filter').removeClass('hidden');
                $('#btn_filter i').removeClass('fa');
                $('#btn_filter i').removeClass('fa-eye');
                $('#btn_filter i').addClass('fa');
                $('#btn_filter i').addClass('fa-eye-slash');
                $('#btn_filter').prop('title', 'Filter Off');
            }
            else {
                $('#row_filter').addClass('hidden');
                $('#row_header').removeClass('hidden');
                $('#btn_filter i').removeClass('fa');
                $('#btn_filter i').removeClass('fa-eye-slash');
                $('#btn_filter i').addClass('fa');
                $('#btn_filter i').addClass('fa-eye');
                $('#btn_filter').prop('title', 'Filter On');
            }
        });

        $('#txt_search_1').on('focusout', function() {
            //alert('hello');
        });
    });
</script>