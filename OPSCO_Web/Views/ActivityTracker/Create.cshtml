@model OPSCO_Web.Models.OSC_ActivityTracker
@{
    ViewBag.Title = "New Record";
}
<script src="~/Scripts/jquery-3.2.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/Site.js"></script>
<link rel="stylesheet" href="~/Content/themes/base/jquery-ui.css" />
<h3>Activity</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>New Record</h4>
    <hr />
    <div class="row">
        <div class="col-md-12">
            <a href="@Url.Action("Index", "ActivityTracker", null)" class="btn btn-default btn-sm">
                <i class="fa fa-chevron-left"></i> Back to List
            </a>
        </div>
    </div>
    <br />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <input type="hidden" id="hid_workhours" value="@ViewBag.WorkHours" />
    <div class="form-group">
        @Html.Label("Team", htmlAttributes: new { @class = "control-label input-sm col-md-2" })
        <div class="col-md-4">
            @Html.DropDownList("TeamId", (IEnumerable<SelectListItem>)ViewBag.Teams, "--Select Team--", htmlAttributes: new { @class = "form-control input-sm input-required unfilled", id = "cmb_team" })
            @Html.ValidationMessageFor(model => model.TeamId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Representative", htmlAttributes: new { @class = "control-label input-sm col-md-2" })
        <div class="col-md-4">
            @Html.DropDownList("RepId", (IEnumerable<SelectListItem>)ViewBag.Representatives, "--Select Representative--", htmlAttributes: new { @class = "form-control input-sm input-required unfilled", id = "cmb_reps" })
            @Html.ValidationMessageFor(model => model.RepId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Activity", htmlAttributes: new { @class = "control-label input-sm col-md-2" })
        <div class="col-md-4">
            @Html.DropDownList("Activity", (IEnumerable<SelectListItem>)ViewBag.Activities, "--Select Activity--", htmlAttributes: new { @class = "form-control input-sm input-required unfilled", id = "cmb_activity" })
            @Html.ValidationMessageFor(model => model.Activity, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DateFrom, htmlAttributes: new { @class = "control-label input-sm col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.DateFrom, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled", placeholder = "MM/DD/YYYY", id = "txt_dtfrom" } })
            @Html.ValidationMessageFor(model => model.DateFrom, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DateTo, htmlAttributes: new { @class = "control-label input-sm col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.DateTo, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled", placeholder = "MM/DD/YYYY", id = "txt_dtto" } })
            @Html.ValidationMessageFor(model => model.DateTo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NoOfDays, htmlAttributes: new { @class = "control-label input-sm col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.NoOfDays, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled", placeholder = "days", id = "txt_days" } })
            @Html.ValidationMessageFor(model => model.NoOfDays, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NoOfHours, htmlAttributes: new { @class = "control-label input-sm col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.NoOfHours, new { htmlAttributes = new { @class = "form-control input-sm input-required unfilled", placeholder = "hours", id="txt_hours" } })
            @Html.ValidationMessageFor(model => model.NoOfHours, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="navbar navbar-default navbar-fixed-bottom table-nav">
    <div class="container-fluid">
        <div class="navbar-right navbar-form">
            <button type="submit" disabled class="btn btn-primary btn-sm pull-right" id="submit">
                <i class="fa fa-save"></i> Save
            </button>
        </div>
    </div>
</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(function () {
        validate($('#submit'));
        $('#txt_dtfrom').datepicker({ format: 'mm/dd/yy', showAnim: 'drop' });
        $('#txt_dtto').datepicker({ format: 'mm/dd/yy', showAnim: 'drop' });
        $('#cmb_team').change(function () {
            var url = '@Url.Action("Create")?teamId=' + $(this).val();
            window.location.href = url;
        });
        $('#cmb_reps').change(function () {
            var url = '@Url.Action("Create")?teamId=' + $('#cmb_team').val() + '&repId=' + $(this).val();
            window.location.href = url;
        });
        $('#txt_dtfrom').change(function () {
            calculate();
        });
        $('#txt_dtto').change(function () {
            calculate();
        });

        function calculate() {
            var workHours = $('#hid_workhours').val();
            if ($('#txt_dtfrom').val() != '' && $('#txt_dtto').val() != '') {
                var diff = 0;
                var d1 = moment($('#txt_dtfrom').val(), 'M/D/YYYY');
                var d2 = moment($('#txt_dtto').val(), 'M/D/YYYY');
                var diff = d2.diff(d1, 'days');
                diff += 1;
                var act = $('#cmb_activity').val();
                switch (act) {
                    case 'Time-off':
                    case 'Holiday':
                        var excWkDay = diff % 7;              //Get excess weekday
                        var wkDay = diff - excWkDay;          //Remove excess from result
                        var wk = wkDay / 7;                     //count number of weeks
                        if (wk > 0) {
                            wk = Math.floor(wk) * 2;            //Multiply to two to include both sat and sun
                            diff = diff - wk;
                        }
                        break;
                    case null:
                        diff = 0;
                        break;
                }
                $('#txt_days').val(diff);
                $('#txt_hours').val(workHours * diff);
            }
        }
    });
</script>