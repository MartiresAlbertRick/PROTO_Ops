<div class="row">
    <div class="col-md-12">
        <p>Productivity</p>
    </div>
    <div class="col-md-12">
        <div class="chart">
            <canvas id="prodBarChart" height="400" style="height: 400px; max-height:400px;"></canvas>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <p>Quality</p>
    </div>
    <div class="col-md-12">
        <div class="chart">
            <canvas id="qualBarChart" height="400" style="height: 400px; max-height:400px;"></canvas>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <p>Efficiency</p>
    </div>
    <div class="col-md-12">
        <div class="chart">
            <canvas id="effBarChart" height="400" style="height: 400px; max-height:400px;"></canvas>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <p>Utilization</p>
    </div>
    <div class="col-md-12">
        <div class="chart">
            <canvas id="utilBarChart" height="400" style="height: 400px; max-height:400px;"></canvas>
        </div>
    </div>
</div>
<script>
    var prodBarChartData =
        { labels: [], datasets: [] }
    var qualBarChartData =
        { labels: [], datasets: [] }
    var effBarChartData =
        { labels: [], datasets: [] }
    var utilBarChartData =
        { labels: [], datasets: [] }
    $(function () {
        $('a[data-toggle="tab"].indsum').on('shown.bs.tab', function () {
            jsonIndividualProductivity();
            jsonIndividualQuality();
            jsonIndividualEfficiency();
            jsonIndividualUtilization();
        });
    });
    function jsonIndividualProductivity() {
        $.ajax({
            type: "GET",
            url: "/TeamScorecard/JsonIndividualProductivity/",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                prodBarChartData =
                    {
                        labels: [],
                        datasets: []
                    }
                var dt = {
                    label: "Productivity",
                    fillColor: "rgba(60,141,188,0.9)",
                    strokeColor: "rgba(60,141,188,0.8)",
                    pointColor: "#3b8bba",
                    pointStrokeColor: "#c1c7d1",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: []
                };
                $.each(data, function (index, item) {
                    prodBarChartData.labels.push(item.Label);
                    dt.data.push(item.Count);
                });
                var s = data.length;
                var max = 25 - s;
                for (i = 0; i < max; i++) {
                    prodBarChartData.labels.push("-");
                    dt.data.push(0);
                }
                prodBarChartData.datasets.push(dt);
                renderIndividualProductivity();
                //
            },
            error: function (response) {
                alert(response.responseText);
            },
            failure: function (response) {
                alert(response.responseText);
            }
        });
    }
    function jsonIndividualQuality() {
        $.ajax({
            type: "GET",
            url: "/TeamScorecard/JsonIndividualQuality/",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                qualBarChartData =
                    {
                        labels: [],
                        datasets: []
                    }
                var dt = {
                    label: "Quality",
                    fillColor: "rgba(60,141,188,0.9)",
                    strokeColor: "rgba(60,141,188,0.8)",
                    pointColor: "#3b8bba",
                    pointStrokeColor: "#c1c7d1",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: []
                };
                $.each(data, function (index, item) {
                    qualBarChartData.labels.push(item.Label);
                    dt.data.push(item.Count);
                });
                var s = data.length;
                var max = 25 - s;
                for (i = 0; i < max; i++) {
                    qualBarChartData.labels.push("-");
                    dt.data.push(0);
                }
                qualBarChartData.datasets.push(dt);

                renderIndividualQuality();
            },
            error: function (response) {
                alert(response.responseText);
            },
            failure: function (response) {
                alert(response.responseText);
            }
        });
    }
    function jsonIndividualEfficiency() {
        $.ajax({
            type: "GET",
            url: "/TeamScorecard/JsonIndividualEfficiency/",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                effBarChartData =
                    {
                        labels: [],
                        datasets: []
                    }
                var dt = {
                    label: "Efficiency",
                    fillColor: "rgba(60,141,188,0.9)",
                    strokeColor: "rgba(60,141,188,0.8)",
                    pointColor: "#3b8bba",
                    pointStrokeColor: "#c1c7d1",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: []
                };
                $.each(data, function (index, item) {
                    effBarChartData.labels.push(item.Label);
                    dt.data.push(item.Count);
                });
                var s = data.length;
                var max = 25 - s;
                for (i = 0; i < max; i++) {
                    effBarChartData.labels.push("-");
                    dt.data.push(0);
                }
                effBarChartData.datasets.push(dt);

                renderIndividualEfficiency();
            },
            error: function (response) {
                alert(response.responseText);
            },
            failure: function (response) {
                alert(response.responseText);
            }
        });
    }
    function jsonIndividualUtilization() {
        $.ajax({
            type: "GET",
            url: "/TeamScorecard/JsonIndividualUtilization/",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                utilBarChartData =
                    {
                        labels: [],
                        datasets: []
                    }
                var dt = {
                    label: "Utilization",
                    fillColor: "rgba(60,141,188,0.9)",
                    strokeColor: "rgba(60,141,188,0.8)",
                    pointColor: "#3b8bba",
                    pointStrokeColor: "#c1c7d1",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: []
                };
                $.each(data, function (index, item) {
                    utilBarChartData.labels.push(item.Label);
                    dt.data.push(item.Count);
                });
                var s = data.length;
                var max = 25 - s;
                for (i = 0; i < max; i++) {
                    utilBarChartData.labels.push("-");
                    dt.data.push(0);
                }
                utilBarChartData.datasets.push(dt);

                renderIndividualUtilization();
            },
            error: function (response) {
                alert(response.responseText);
            },
            failure: function (response) {
                alert(response.responseText);
            }
        });
    }
    function renderIndividualProductivity() {
        var barChartCanvas = $("#prodBarChart").get(0).getContext("2d");
        var barChart = new Chart(barChartCanvas);
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        };
        barChartOptions.datasetFill = false;
        barChart.Bar(prodBarChartData, barChartOptions);
    }
    function renderIndividualQuality() {
        var barChartCanvas = $("#qualBarChart").get(0).getContext("2d");
        var barChart = new Chart(barChartCanvas);
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        };
        barChartOptions.datasetFill = false;
        barChart.Bar(qualBarChartData, barChartOptions);
    }
    function renderIndividualEfficiency() {
        var barChartCanvas = $("#effBarChart").get(0).getContext("2d");
        var barChart = new Chart(barChartCanvas);
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        };
        barChartOptions.datasetFill = false;
        barChart.Bar(effBarChartData, barChartOptions);
    }
    function renderIndividualUtilization() {
        var barChartCanvas = $("#utilBarChart").get(0).getContext("2d");
        var barChart = new Chart(barChartCanvas);
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        };
        barChartOptions.datasetFill = false;
        barChart.Bar(utilBarChartData, barChartOptions);
    }

</script>